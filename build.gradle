import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version('7.1.0')
}

group = project.property("group")
version = project.property("version")
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://repo.codemc.io/repository/nms/' }
    maven { url = 'https://repo.codemc.io/repository/maven-public/' }
    maven { url = 'https://maven.playpro.com' }
    maven { url = 'https://repo.bg-software.com/repository/api/' }
    maven { url = 'https://repo.bg-software.com/repository/public-libs/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://mvn.intellectualsites.com/content/repositories/releases/' }
    maven { url = 'https://mvn.intellectualsites.com/content/repositories/snapshots/' }
}

dependencies {
    implementation 'com.github.Drc-DEV:configlib:1.9.2'
    // Spigot jar
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    // CoreProtect
    compileOnly 'net.coreprotect:coreprotect:20.1', {
        exclude group: 'org.spigotmc'
        exclude group: 'org.bukkit'
    }
    // Plugin Hooks
    compileOnly 'com.wasteofplastic:AcidIsland:latest'
    compileOnly 'com.wasteofplastic:ASkyblock:latest'
    compileOnly 'world.bentobox:BentoBox:latest'
    compileOnly 'com.drtshock:FactionsUUID:latest'
    compileOnly 'com.drtshock:FactionsUUID-New:latest'
    compileOnly 'net.prosavage:FactionsX:latest'
    compileOnly 'me.ryanhamshire:GriefPrevention:latest'
    compileOnly 'com.massivecraft:Factions:latest'
    compileOnly 'com.massivecraft:MassiveCore:latest'
    compileOnly 'com.bgsoftware:SuperiorSkyblockAPI:latest'
    compileOnly 'com.github.TownyAdvanced:Towny:0.97.2.8'
    compileOnly 'com.stefthedev:Villages:latest'
    compileOnly 'com.plotsquared:PlotSquared-Core:6.1.2', {
        exclude group: 'org.spigotmc'
        exclude group: 'org.bukkit'
        exclude group: 'net.kyori'
        exclude group: 'org.khelekore'
        exclude group: 'com.sk89q.worldedit'
    }
}

processResources {
    filter ReplaceTokens, tokens: [
            "project.name"       : project.property("name"),
            "project.groupId"    : project.property("groupid"),
            "project.artifactId" : project.property("artifactid"),
            "project.version"    : project.property("version"),
            "project.description": project.property("description")
    ]
}

jar {
    archiveFileName.set(project.property("name").toString() + "-lib.jar")
}

shadowJar {
    relocate "pro.dracarys.configlib", project.property("groupid").toString() + "." + project.property("artifactid").toString() + ".shade.configlib"
    archiveFileName.set(project.property("name").toString() + "-${project.version}.jar")
    from sourceSets.getByName("main").output
    configurations = [project.configurations.getByName("runtimeClasspath")]
}

build {
    dependsOn shadowJar
    dependsOn publish
}

publish.shouldRunAfter shadowJar
shadowJar.shouldRunAfter build

publishing {
    repositories {
        mavenLocal()
    }
}